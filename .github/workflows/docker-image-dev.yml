name: Dev Docker Nginx Image CI

on:
  push:
    branches:
      - develop
jobs:
  build_image_and_push_to_ecr:
    runs-on: ubuntu-latest

    steps:

    - name: Checkout the GitHub Repo
      uses: actions/checkout@v2


    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1


    - name: Login to Amazon ECR
      id: jouell-stocks
      uses: aws-actions/amazon-ecr-login@v1


    - name: Build and tag Web image 
      env:
        ECR_REGISTRY: ${{ steps.jouell-stocks.outputs.registry }}
        DEV_WEB_REPO: docker_stocks_web_dev
        PRD_WEB_REPO: docker_stocks_web
        IMAGE_TAG: latest 
      run: |
        docker pull      $ECR_REGISTRY/$DEV_WEB_REPO:$IMAGE_TAG
        docker image tag $ECR_REGISTRY/$DEV_WEB_REPO:$IMAGE_TAG docker_stocks_web_dev:latest 

    - name: Build and tag App image 
      env:
        ECR_REGISTRY: ${{ steps.jouell-stocks.outputs.registry }}
        DEV_APP_REPO: docker_stocks_app_dev 
        PRD_APP_REPO: docker_stocks
        IMAGE_TAG: latest 
      run: |
        docker pull      $ECR_REGISTRY/$DEV_APP_REPO:$IMAGE_TAG
        docker image tag $ECR_REGISTRY/$DEV_APP_REPO:$IMAGE_TAG docker_stocks_app_dev:latest 
        #
        docker-compose -f docker-compose.AWS.hosted.MongoDb.no.cloudwatch.yaml build 
        docker-compose -f docker-compose.AWS.hosted.MongoDb.no.cloudwatch.yaml up -d 
        #
        docker ps
        docker images
        #
        docker push $ECR_REGISTRY/$PROD_APP_REPO:$IMAGE_TAG 
